## CSE 331 hw-graph Coding Questions

## Part 2
###########################################################################

Briefly explain why you included the operations you did and why you feel they are a sufficient
interface to a graph. If your design includes multiple classes or interfaces, explain why you
included each one; if not, explain whether you considered additional classes and why you decided
not to include them.


TODO: Your answer here!
I created a graph class that includes add/remove vertex/edge method, contains vertex/edge method,
size method for Vertex/edge, getChildren method for the vertex, getVertices method to all the vertices,
equals and hashcode methods. It allows you to represent a multi-graph, where you can create
a directed edge between the node in your graph. It contains methods that allow a clients to
mutate the object since its mutable data structure. I didn't consider using additional classes
since it was easier to organize and design the ADT, especially the operations and put them together
in a single class. I thought using different classes or an interface would make it a lot complicated.


## Part 3
###########################################################################

What was your testing strategy for this assignment? How do your script tests and JUnit tests
differ from each other (if they do), and why?


TODO: Your answer here!
I tested cases where can add nodes and check the result by printing the nodes and the nodes children
using the script testing. For example, I wasn't able to test the remove edge or vertex method using the
script, so I created a junit test for it. I also tested the size method and exceptions using the Junit test.
I also created the tests for equality using the Junit test. I tested adding edges, vertex, island graphs,
multiple edges, self loops and other extreme cases using the test script.
