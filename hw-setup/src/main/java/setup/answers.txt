## CSE 331 hw-setup Questions
## Part 7: Answering Questions About the Code

1. Why did Fibonacci fail the testThrowsIllegalArgumentException< test? What (if anything) did
you have to do to fix it? If you did not have to change anything to fix this issue, explain why.

It failed the testThrowsIllegalArgumentException because the getfibterm in Fibonacci was throwing
illegalArgumentException() when n is 0, but the test doesn't expect an exception since 0 is non-negative.
I changed the code in getfibterm to throw an IllegalArgumentException() when n < 0.

2. Why did Fibonacci fail the testBaseCase test? What (if anything) did you have to do to fix
it? If you did not have to change anything to fix this issue, explain why.

The Fibonacci failed the testBaseCase because the getFibterm treats n = 0 as a negative
due to the basecase, if (n <= 0) and throws IllegalArgumentException().
I changed the basacase in getfibterm to throw an IllegalArgumentException() when n < 0, when it's negative.
since n = 0 is less than 2, it correctly returns 1 by the other basecase in the getfibterm.


3.Why did Fibonacci fail the testInductiveCase test? What (if anything) did you have to do to
fix it? If you did not have to change anything to fix this issue, explain why.
The getfibterm is returning 1 for n = 2, which is not correct since it doesn't match the
expected value of 2. The else if base case return 1 when n <= 2, so we need to change
it to n < 2. This way it returns 1 when n is 0 or 1, and we return getfibterm(n-1) + getfibterm(n-2) for n >= 2.
For n = 2, getfibterm(n-1) + getfibterm(n-2) = getfibterm(1) + getfibterm(0) = 1 + 1 = 2.

## Part 8: Debugger Tutorial

1. What are the values of "x", "y", and "sum" printed by your statement? Why was x not equal 
to the first integer entered here, and how could we fix this?
x = 4, y = 4 and sum = 0 were the values printed by my statement. X was not equal to
the first integer entered here because we are dividing by 2 and then multiply by 2.
While the 2's should cancel, in Java when dividing an odd integer number by 2, it rounds down
to a whole integer. When we then multiply by 2, we won't get the value entered by the user.
EX: when we enter 5, 2 * (5/2) = 2 * (2)  = 4 in Java.
To fix this, we can just set x = console.nextIn();

2. What are all the names and values listed in the “Variables” panel? What does the “frames” 
tab list as the current method and line number? (Write down the text that was highlighted when 
the Debug perspective first opened.)
The variables listed were x and y, and their values were x = 3 and y = 4. The current method is
listed as computeSum and line 44.


3. What are all the names and values listed in the “Variables” panel after each of the two step overs?
The names of the variables listed are x, y, and sum. Their values are x = 3, y = 4, and sum = -1.

